{"relation": [["Date", "20080414", "20090217"], ["Author", "Michael O'Brien", "Michael O'Brien"], ["Version Description & Notes", "Initial version covering Oracle OC4J 10.1.3.4 and 11.1.1.0", "Updated for version 10.1.3.5 or 10.1.4 - completed 20090226"]], "pageTitle": "EclipseLink/Examples/JPA/OC4J Web Tutorial - Eclipsepedia", "title": "", "url": "http://wiki.eclipse.org/index.php?title=EclipseLink/Examples/JPA/OC4J_Web_Tutorial&oldid=172438", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 0, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988061.16/warc/CC-MAIN-20150728002308-00298-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 262199259, "recordOffset": 262179170, "tableOrientation": "HORIZONTAL", "TableContextTimeStampAfterTable": "{75640=Copyright \u00a9 2014 The Eclipse Foundation. All Rights Reserved., 31396=Software: Eclipse IDE for Java EE 3.4 Ganymede (SR1 Oct 2008), Oracle 11g DB 11.1.0.6.0, Java JDK 1.6.0_07, OC4J 10.1.3.4.0 20080709}", "textBeforeTable": "Document History 2) Either create a new 10.1.3 server in Eclipse and deploy your EAR there, or deploy your EAR manually via the EM console. 1) Add a new org.eclipse.persistence shared-library containing the 2 jars required to run EclipseLink JPA The following summary lists the essential changes required (beyond what is shipped out of the box) to get running up quickly for advanced users. Quick Start Notes EclipseLink JPA Deployed on OC4J using Eclipse WTP 1.16 References 1.15 Troubleshooting 1.14.2 Browser Output 1.14.1 Console Output 1.14 Perform a JPQL query 1.13 Publish EAR 1.12 Start Server 1.11.1 JTA Datasource 1.11 Persistence.xml 1.10.1.2 DDL/Schema Generation 1.10.1.1 Tutorial Design 1.10.1 UML Data Model 1.10 Create J2EE application 1.9.1 Verify OC4J server launch from Eclipse 1.9 Create server in Eclipse 1.8 JDBC JAR", "textAfterTable": "If you want to get a small web application running quickly on OC4J use the services provided by the Web Tools Project plugin in the Eclipse IDE to take care of deployment details for you. This basic example details how to use Eclipse to run/debug a minimum J2EE web application servlet using EclipseLink JPA as the persistence provider. The goal of this example is to detail the minimum steps needed to run EclipseLink inside OC4J using the Eclipse IDE - at this point no presentation/controller layer such as JSF, Spring or Struts will be used beyond a basic HttpServlet so we can concentrate on the the integration layer JPA setup. The DALI project was used to generate Entities from a schema with sequences already populated. Tutorial Source The EAR, EJB and WEB Eclipse project source for this EclipseLink OC4J tutorial will be available online at the following locations. These 3 projects must be imported along with the jpa core eclipselink project. See: http://wiki.eclipse.org/EclipseLink/Source Checkout the following 3 projects together from $trunk/examples. org.eclipse.persistence.example.jpa.server.oc4j.enterpriseEAR org.eclipse.persistence.example.jpa.server.oc4j.enterpriseEJB org.eclipse.persistence.example.jpa.server.oc4j.enterpriseWeb See http://bugs.eclipse.org/250475 And the DDL generation J2SE JPA application used to populate the database schema. http://dev.eclipse.org/svnroot/rt/org.eclipse.persistence/trunk/examples/org.eclipse.persistence.example.jpa.server.common.ddlgen Development Environment Hardware: Windows Vista SP1, Core2Duo E8400 45nm, 3.0Ghz, 3Gb Ram Software:", "hasKeyColumn": true, "keyColumnIndex": 1, "headerRowIndex": 0}