{"relation": [["Author", "Bryan O'Sullivan", "Bryan O'Sullivan", "Bryan O'Sullivan", "Bryan O'Sullivan", "Bryan O'Sullivan", "Bryan O'Sullivan", "Bryan O'Sullivan", "Bryan O'Sullivan", "Bryan O'Sullivan", "Bryan O'Sullivan", "Bryan O'Sullivan", "Bryan O'Sullivan", "Bryan O'Sullivan", "Bryan O'Sullivan", "Bryan O'Sullivan", "Bryan O'Sullivan", "Bryan O'Sullivan", "Bryan O'Sullivan", "Bryan O'Sullivan", "Bryan O'Sullivan", "Bryan O'Sullivan"], ["Commit", "923a9a8", "a1b7591", "1759329", "13adc8a", "20aa9bc", "37129b0", "6048001", "89db97b", "d55e392", "b6d490d", "a23a646", "1eea4f6", "f6f975e", "6f5e1e7", "32b656f", "4d4381e", "c633444", "e6921a3", "a837a30", "c0a0add", "954bcac"], ["Message", "Add README", "Add support for flags on mysql_real_connect.", "Seek and tell, commit and rollback.", "Add support for connection options.", "Add SSL connection support.", "Tons of code changes and some doc notes. In brief: Allow both blocking and non-blocking use of the C API. Document the rules (at least as I imagine them to be) for object lifetime management. A pony.", "Add useResult, nextResult. The handling of Result is incorrect at the moment, as MYSQL_RES values must be freed before we can safely call mysql_next_result, but the current automatic freeing of MYSQL_RES via a finalizer does not permit this.", "Basic result fetching.", "setCharacterSet", "selectDB", "Field metadata.", "More implementation: query, fieldCount, affectedRows, and escape. Also improved the performance of withRTSSignalsBlocked.", "Yert more info.", "SSL cipher info.", "Moar info.", "Implement a bunch of info API entry points.", "Implement autocommit and changeUser.", "Fix FFI safety of a few calls to make them cheaper.", "Implement threadId", "Implement ping", "A very basic initial commit."], ["Labels", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["Comments", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["Approvals", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], ["Date", "2011-04-28", "2011-04-28", "2011-04-28", "2011-04-28", "2011-04-28", "2011-04-28", "2011-04-28", "2011-04-28", "2011-04-27", "2011-04-27", "2011-04-27", "2011-04-27", "2011-04-27", "2011-04-27", "2011-04-27", "2011-04-27", "2011-04-27", "2011-04-27", "2011-04-27", "2011-04-27", "2011-04-27"]], "pageTitle": "bos / mysql / Commits \u2014 Bitbucket", "title": "", "url": "https://bitbucket.org/bos/mysql/commits/all?page=c0a0addc6254b497bc5ac1f739c23302d0bf77c2", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 0, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988458.74/warc/CC-MAIN-20150728002308-00176-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 866516835, "recordOffset": 866496297, "tableOrientation": "HORIZONTAL", "textBeforeTable": "User name is string. user(string) The specified tag by name, or all tagged revisions if no name is given. tag(name) Changesets with no parent changeset in set. roots(set) Revision with the given numeric identifier. rev(number) An empty set, if any revision in set isn't found; otherwise, all revisions in set. present(set) The set of all parents for all changesets in set, or the working directory. parents([set]) Second parent", "textAfterTable": "Prev Next Blog Support", "hasKeyColumn": true, "keyColumnIndex": 2, "headerRowIndex": 0}