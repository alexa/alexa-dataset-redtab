{"relation": [["Date", "110926", "110927"], ["Author", "Rick Barkhouse", "Rick Barkhouse"], ["Version Description & Notes", "1.00 : First draft", "1.01 : Added design information"]], "pageTitle": "Difference between revisions of \"EclipseLink/Release/2.4.0/JAXB RI Extensions/XML Location\" - Eclipsepedia", "title": "", "url": "http://wiki.eclipse.org/index.php?title=EclipseLink/Release/2.4.0/JAXB_RI_Extensions/XML_Location&diff=270229&oldid=270228", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 2, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988061.16/warc/CC-MAIN-20150728002308-00130-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 262163096, "recordOffset": 262147529, "tableOrientation": "HORIZONTAL", "TableContextTimeStampAfterTable": "{45985=Copyright \u00a9 2014 The Eclipse Foundation. All Rights Reserved.}", "textBeforeTable": "Not all unmarshal sources will be able to provide XML location information. For example, unmarshalling from a File would be able to give you line, column and system ID (filename); system ID is not available when unmarshalling from an InputStream; unmarshalling from a Node would give you no XML location information at all. If an @XmlLocation property is also marked as @XmlTransient, then Locator information will NOT appear in marshalled XML. If XML is unmarshalled that contains actual Locator information (e.g. the example above), that information is not read in like a normal mapping; upon unmarshalling the Locator property will be set to reflect the current XML location. If an object with a populated Locator is marshalled to XML, the Locator information will appear in the resultant XML. If an object containing an @XmlLocation property is unmarshalled, a Locator object will be created and set on the property, containing the XML location info. Behaviour Have zero impact on memory/performance if the user is not using @XmlLocation. System ID, if applicable Column number Line number Deliver an @XmlLocation annotation in the EclipseLink library that will provide the same functionality as the Sun extension. Requirements This document will outline the design for an EclipseLink equivalent to", "textAfterTable": "java.io.Reader java.net.URL javax.xml.stream.XMLEventReader javax.xml.stream.XMLStreamReader org.w3c.dom.Node org.xml.sax.InputSource Configuration In order to use @XmlLocation, the user must", "hasKeyColumn": true, "keyColumnIndex": 1, "headerRowIndex": 0}